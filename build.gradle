plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id "net.ltgt.errorprone" version "1.1.0"
    id "io.freefair.lombok" version "4.1.0"
    id 'checkstyle'
    id 'maven'
    id 'java'
}

group = 'com.github.kuro46'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" }
}

dependencies {
    // Bukkit
    compileOnly "org.bukkit:bukkit:1.12.2-R0.1-SNAPSHOT"
    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'
    // Guava
    implementation 'com.google.guava:guava:28.1-jre'
    // Apache Commons Lang
    implementation 'org.apache.commons:commons-lang3:3.9'
    // Apache Commons Text
    implementation 'org.apache.commons:commons-text:1.8'
    // JUnit
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    // ErrorProne
    errorprone("com.google.errorprone:error_prone_core:2.+")
}

if (!JavaVersion.current().isJava9Compatible()) {
    dependencies {
        errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:all" << "-Werror"
}

processResources {
    filter { String line ->
        line.replace('$version', version)
    }
}

// Shadow settings

shadowJar {
    minimize()
    archiveFileName = "ScriptBlock-Improved-${version}.jar"

    relocate 'com.google', 'com.github.kuro46.scriptblockimproved.libs.google'
    relocate 'org.apache.commons.lang3', 'com.github.kuro46.scriptblockimproved.libs.commons.lang'
    relocate 'org.apache.commons.text', 'com.github.kuro46.scriptblockimproved.libs.commons.text'
    relocate 'org.checkerframework', 'com.github.kuro46.scriptblockimproved.libs.checkerframework'
}

artifacts {
    archives shadowJar
}

task pluginJar {
    doFirst {
        shadowJar {
            archiveFileName = "ScriptBlock-Improved.jar"
        }
    }

    finalizedBy "shadowJar"
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}
